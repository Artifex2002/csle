from csle_common.dao.container_config.vulnerability_type import VulnType


class NodeVulnerabilityConfig:
    """
    A DTO object representing a vulnerability of a container in the emulation environment
    """

    def __init__(self, ip: str, vuln_type: VulnType):
        """
        Initializes the DTO

        :param ip: the ip of the node
        :param vuln_type: the vulnerability type
        """
        self.ip = ip
        self.vuln_type = vuln_type


    def to_dict(self) -> dict:
        """
        :return: a dict representation of the object
        """
        d = {}
        d["ip"] = self.ip
        d["vuln_type"] = self.vuln_type.name
        return d

    @staticmethod
    def from_dict(d) -> "NodeVulnerabilityConfig":
        """
        Convert a dict representation to a DTO representation

        :return: a dto representation of the object
        """
        dto = NodeVulnerabilityConfig(ip=d["ip"], vuln_type=VulnType.from_str(d["vuln_type"]))
        return dto


    def __str__(self) -> str:
        """
        :return: a string representation of the object
        """
        return "node_internal_ip:{}, vuln_type:{}".format(self.ip, self.vuln_type)