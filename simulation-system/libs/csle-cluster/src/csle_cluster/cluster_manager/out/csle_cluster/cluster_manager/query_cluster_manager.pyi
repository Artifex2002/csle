import csle_cluster.cluster_manager.cluster_manager_pb2
from typing import List

def get_node_status(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.NodeStatusDTO: ...
def start_postgresql(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ServiceStatusDTO: ...
def start_cadvisor(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ServiceStatusDTO: ...
def start_node_exporter(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ServiceStatusDTO: ...
def start_grafana(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ServiceStatusDTO: ...
def start_prometheus(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ServiceStatusDTO: ...
def start_pgadmin(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ServiceStatusDTO: ...
def start_nginx(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ServiceStatusDTO: ...
def start_flask(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ServiceStatusDTO: ...
def start_docker_statsmanager(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ServiceStatusDTO: ...
def start_docker_engine(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ServiceStatusDTO: ...
def stop_postgresql(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ServiceStatusDTO: ...
def stop_cadvisor(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ServiceStatusDTO: ...
def stop_node_exporter(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ServiceStatusDTO: ...
def stop_grafana(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ServiceStatusDTO: ...
def stop_prometheus(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ServiceStatusDTO: ...
def stop_pgadmin(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ServiceStatusDTO: ...
def stop_nginx(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ServiceStatusDTO: ...
def stop_flask(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ServiceStatusDTO: ...
def stop_docker_statsmanager(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ServiceStatusDTO: ...
def stop_docker_engine(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ServiceStatusDTO: ...
def get_log_file(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, log_file_name: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_flask_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_postgresql_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_docker_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_nginx_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_grafana_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_pgadmin_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_cadvisor_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_node_exporter_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_prometheus_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_docker_statsmanager_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_csle_log_files(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def start_containers_in_execution(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def attach_containers_in_execution_to_networks(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def install_libraries(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def apply_kafka_config(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_sdn_controller(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def apply_resource_constraints(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def create_ovs_switches(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def ping_execution(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def configure_ovs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_sdn_controller_monitor(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def create_users(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def create_vulnerabilities(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def create_flags(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def create_topology(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_traffic_managers(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_traffic_generators(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_client_population(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_kafka_client_producer(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_kafka_client_producer(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_snort_idses(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_snort_idses_monitor_threads(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_ossec_idses(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_ossec_idses_monitor_threads(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_elk_stack(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_host_managers(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def apply_filebeats_config(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def apply_packetbeats_config(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def apply_metricbeats_config(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def apply_heartbeats_config(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_filebeats(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, initial_start: bool = ..., timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_metricbeats(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, initial_start: bool = ..., timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_heartbeats(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, initial_start: bool = ..., timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_packetbeats(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, initial_start: bool = ..., timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_docker_statsmanager_thread(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_all_executions_of_emulation(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_execution(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_all_executions(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def clean_all_executions(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def clean_all_executions_of_emulation(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def clean_execution(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_traffic_manager(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_traffic_manager(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_traffic_managers(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_client_manager(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_client_manager(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_client_population(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def get_num_active_clients(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.GetNumClientsDTO: ...
def stop_traffic_generators(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_traffic_generator(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_traffic_generator(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def get_client_managers_info(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ClientManagersInfoDTO: ...
def get_traffic_managers_info(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.TrafficManagersInfoDTO: ...
def stop_all_running_containers(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_container(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, container_name: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def remove_all_stopped_containers(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def remove_container(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, container_name: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def remove_all_container_images(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def remove_container_image(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, image_name: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def list_all_container_images(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ContainerImagesDTO: ...
def list_all_docker_networks(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.DockerNetworksDTO: ...
def start_all_stopped_containers(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_container(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, container_name: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def list_all_running_containers(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.RunningContainersDTO: ...
def list_all_running_emulations(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.RunningEmulationsDTO: ...
def list_all_stopped_containers(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.StoppedContainersDTO: ...
def create_emulation_networks(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_docker_stats_manager_thread(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def get_docker_stats_manager_status(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, port: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.DockerStatsMonitorStatusDTO: ...
def remove_docker_networks(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, networks: List[str], timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def remove_all_docker_networks(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def get_docker_stats_manager_info(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.DockerStatsManagersInfoDTO: ...
def stop_elk_manager(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_elk_manager(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def get_elk_status(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ElkStatusDTO: ...
def stop_elk_stack(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_elastic(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_elastic(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_kibana(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_kibana(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_logstash(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_logstash(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def get_elk_managers_info(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ElkManagersInfoDTO: ...
def start_containers_of_execution(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def run_container(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, image: str, name: str, memory: int, num_cpus: int, create_network: bool, version: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_containers_of_execution(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_host_manager(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_host_managers(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_host_manager(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_host_monitor_threads(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_filebeats(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_packetbeats(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_metricbeats(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_heartbeats(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_host_monitor_thread(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_filebeat(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, initial_start: bool = ..., timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_packetbeat(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, initial_start: bool = ..., timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_metricbeat(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, initial_start: bool = ..., timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_heartbeat(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, initial_start: bool = ..., timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_filebeat(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_packetbeat(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_metricbeat(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_heartbeat(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def apply_filebeat_config(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def apply_packetbeat_config(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def apply_metricbeat_config(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def apply_heartbeat_config(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def get_host_monitor_threads_statuses(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.GetHostMonitorThreadsStatusesMsg: ...
def get_host_managers_info(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.HostManagersInfoDTO: ...
def stop_kafka_manager(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_kafka_manager(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def create_kafka_topics(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def get_kafka_status(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.KafkaStatusDTO: ...
def stop_kafka_server(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_kafka_server(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def get_kafka_managers_info(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.KafkaManagersInfoDTO: ...
def stop_ossec_idses(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_ossec_ids(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_ossec_ids(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_ossec_ids_managers(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_ossec_ids_managers(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_ossec_ids_manager(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_ossec_ids_manager(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_ossec_ids_monitor_thread(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_ossec_ids_monitor_thread(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_ossec_ids_monitor_threads(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def get_ossec_ids_monitor_thread_statuses(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OSSECIdsMonitorThreadStatusesDTO: ...
def get_ossec_ids_managers_info(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OSSECIdsManagersInfoDTO: ...
def start_ryu_manager(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_ryu_manager(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def get_ryu_status(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.RyuManagerStatusDTO: ...
def start_ryu(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_ryu(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def get_ryu_managers_info(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.RyuManagersInfoDTO: ...
def stop_snort_idses(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_snort_idses_monitor_threads(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_snort_ids(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_snort_ids_monitor_thread(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_snort_ids(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_snort_ids_monitor_thread(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_snort_ids_monitor_threads(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_snort_ids_managers(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_snort_ids_managers(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_snort_ids_manager(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_snort_ids_manager(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_snort_ids_monitor_threads(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def get_snort_ids_managers_info(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.SnortIdsManagersInfoDTO: ...
def get_execution_info(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.ExecutionInfoDTO: ...
def get_snort_ids_monitor_thread_statuses(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.SnortIdsMonitorThreadStatusesDTO: ...
def create_kibana_tunnel(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def create_ryu_tunnel(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def list_kibana_tunnels(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.KibanaTunnelsDTO: ...
def list_ryu_tunnels(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.KibanaTunnelsDTO: ...
def remove_ryu_tunnel(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def remove_kibana_tunnel(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_host_monitor_threads(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_host_monitor_thread(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_ryu_monitor(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_ryu_monitor(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def get_ryu_manager_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_ryu_controller_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_elk_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_elk_manager_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_traffic_manager_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_host_manager_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_ossec_ids_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_ossec_ids_manager_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_snort_ids_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_snort_ids_manager_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_kafka_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_kafka_manager_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_client_manager_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_container_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_cluster_manager_logs(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.LogsDTO: ...
def get_execution_time_series_data(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, minutes: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.EmulationMetricsTimeSeriesDTO: ...
def start_spark_servers(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_spark_servers(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def start_spark_server(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_spark_server(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, emulation: str, ip_first_octet: int, container_ip: str, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def check_pid(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, pid: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
def stop_pid(stub: csle_cluster.cluster_manager.cluster_manager_pb2_grpc.ClusterManagerStub, pid: int, timeout=...) -> csle_cluster.cluster_manager.cluster_manager_pb2.OperationOutcomeDTO: ...
