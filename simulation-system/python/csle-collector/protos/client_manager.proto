syntax = "proto3";

// Interface exported by the server
service ClientManager {
  rpc getClients(GetClientsMsg) returns (ClientsDTO) {}
  rpc stopClients(StopClientsMsg) returns (ClientsDTO) {}
  rpc startClients(StartClientsMsg) returns (ClientsDTO) {}
  rpc startProducer(StartProducerMsg) returns (ClientsDTO) {}
  rpc stopProducer(StopProducerMsg) returns (ClientsDTO) {}
}

// Message that the client sends to stop the clients processes
message StopClientsMsg {}

// Message that the client sends to start the clients processes
message StartClientsMsg {
  float mu = 1;
  float lamb = 2;
  int32 time_step_len_seconds = 3;
  repeated string commands = 4;
  int32 num_commands = 5;
  bool sine_modulated = 6;
  float time_scaling_factor = 7;
  float period_scaling_factor = 8;
}

// Message that the client sends to extract the ClientsDTO
message GetClientsMsg {}

// Message that the client sends to start the producer thread
message StartProducerMsg {
  string ip = 1;
  int32 port = 2;
  int32 time_step_len_seconds = 3;
}

// Message that the client sends to start the producer thread
message StopProducerMsg {}

// Message that the server returns when requested by the  client
message ClientsDTO {
  int32 num_clients = 1;
  bool client_process_active = 2;
  bool producer_active = 3;
  int32 clients_time_step_len_seconds = 4;
  int32 producer_time_step_len_seconds = 5;
}